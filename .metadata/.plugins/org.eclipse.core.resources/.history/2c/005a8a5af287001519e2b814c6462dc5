package all;

import java.io.File;
import java.io.PrintStream;
import java.util.Scanner;

public class Problem3Main {

	public static void main(String[] args) {
        Scanner reader = null;
        PrintStream writer = null;
	    try {
	    	reader = new Scanner(new File("Tests3\\test.025.in.txt"), "windows-1251");
		    int n = Integer.parseInt(reader.nextLine());
		    Problem2LabirintAllPaths labirint = new Problem2LabirintAllPaths(n);

        if (!File.Exists("../../Files/test.001.in.txt"))
        {
            Console.WriteLine("File problem.in.txt does not exist");
            return;
        }
        reader = new StreamReader("../../Files/test.001.in.txt");

        int n=0;
        int counterLines = 0;
        int startPointRow = 0;
        int startPointCol = 0;
        string line = string.Empty;

        while (true)
        {
            line = reader.ReadLine();
            if (line == null)
            {
                break;
            }
            if (counterLines == 0)
            {
                n = int.Parse(line);
                lab=new char[n,n];
                counterLines++;
            }
            else
            {
                for (int i = 0; i < n; i++)
                {
                    lab[counterLines - 1, i] = line[i];
                    if (line[i] == '*')
                    {
                        startPointRow = counterLines - 1;
                        startPointCol = i;
                    }
                }
                counterLines++;
            }              
        }
        reader.Close();

        visited = new bool[lab.GetLength(0), lab.GetLength(0)];
        lab[startPointRow, startPointCol] = 'a';
        FindPathToExit(startPointRow,startPointCol);

        StreamWriter writer = new StreamWriter("../../Files/test.001.out.txt");
        using (writer)
        {
            foreach (var currentPath in paths)
            {
                writer.WriteLine(currentPath.Key);
            }
        }

	}

}
