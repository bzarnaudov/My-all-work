package treeAndGraphTraversal;

import java.util.HashMap;
import java.util.LinkedList;
import java.util.Map;
import java.util.Scanner;

import all.DynamicList.Node;

public class Problem2RoundDance {
	
	//static LinkedList<Integer>[] graph;
	static Map<Integer, Node<Integer>> map = new HashMap<>();
	
	
	
	public static void main(String[] args) {
		Scanner input = new Scanner(System.in);
		System.out.print("Please write number of nodes in the forest: ");
		int nodesCount = Integer.parseInt(input.nextLine());
		list.add(-1);
		map.put(-5, list);
		
		map.put(-1, value);
		
		input.close();
	}
	
	private class Node<T>{
		T element;
		LinkedList<Node<T>> childNodes;
		
		Node(T element, LinkedList<Node<T>> childNodes) {
			this.element = element;
			childNodes = new LinkedList<Node<T>>();
		}
		Node(T element) {
			this.element = element;
			childNodes = null;
		}
	}
}
