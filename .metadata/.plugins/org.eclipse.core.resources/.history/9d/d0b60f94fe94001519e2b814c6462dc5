package problem3FileSystem;

public class FileSystemTest {

	public static void main(String[] args) {
		Device device = new Device();
        Directory current = new Directory();
        StringBuilder output = new StringBuilder();

        string command = Console.ReadLine();
        if (command.StartsWith("new"))
        {
            string commandAtributes = command.Substring("new".Length + 1);
            string[] tokens = commandAtributes.Split(',');
            device = new Device(tokens[0], new Directory(tokens[1], DateTime.Now));
            current = device.Root;
            output.AppendFormat("Device created – {0}, {1}\n", device.Name, device.Root);
        }

        command = Console.ReadLine();
        while (command != "end")
        {
            if (command.StartsWith("md"))
            {
                Directory newDirectory = MakeDirectory(command);
                current.AddDirectory(newDirectory);
                output.AppendLine("Directory made - " + newDirectory.Name);
            }
            else if (command.StartsWith("cd"))
            {
                if (command == "cd ..")
                {
                    current = current.Parrent;
                }
                else
                {
                    string dirName = command.Substring("cd".Length + 1).Trim();
                    foreach (var dir in current.Directories)
                    {
                        if (dir.Name == dirName)
                        {
                            current = dir;
                        }
                    }
                }
                output.AppendLine("Directory changed - " + current.Name);
            }
            else if (command.StartsWith("dir"))
            {
                output.Append(current.GetFilesAndDirs());
            }
            else if (command == "cur")
            {
                output.AppendLine(current.Name);
            }
            else if (command.StartsWith("nf"))
            {
                output.AppendLine("File created – " + NewFile(command, current));

            }
            else if (command.StartsWith("rf"))
            {
                output.AppendLine(ReadFile(command, current));
            }
            else if (command.StartsWith("all"))
            {
                output.Append(device.ToString());
            }

            command = Console.ReadLine();
        }

        Console.WriteLine(output);
	}
	
	
}
