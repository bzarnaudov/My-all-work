package all;

import all.BinaryTree.BinaryTreeNode;

public class Problem4SumOfTheVerticesOfEachLevelOfTheTree {

	public static void main(String[] args) {
		// Create the binary tree from the sample.
		BinaryTree<Integer> binaryTree =
					new BinaryTree<Integer>(14,
							new BinaryTree<Integer>(19,
									new BinaryTree<Integer> (23),
									new BinaryTree<Integer> (6,
											new BinaryTree<Integer>(10),
											new BinaryTree<Integer>(21))),
							new BinaryTree<Integer>(15,
									new BinaryTree<Integer>(3),
									null));
				
		System.out.println(sumOfEveryDepth(binaryTree.getRoot(), 5));
	}
	
	public static int sumOfEveryDepth(BinaryTreeNode<Integer> node, int depth) {
//	    if ( node == null ) {
//	    	return 0;
//	    }
	    if (depth == 0) {
	    	return node.getValue();
	    } else return sumOfEveryDepth(node.getLeftChild(), depth - 1) + 
	    		sumOfEveryDepth(node.getRightChild(), depth - 1);
	}

}
