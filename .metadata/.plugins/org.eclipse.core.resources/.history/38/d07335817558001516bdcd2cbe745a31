package all;

import java.util.LinkedList;
import java.util.List;

public class Problem8CheckCyclicGraph {

	public static int vertices[][] = { 	{ 0, 1, 0, 0 , 0 },
										{ 0, 0, 1, 0 , 0 },
										{ 0, 0, 0, 1 , 0 },
										{ 0, 0, 0, 0 , 1 },
										{ 0, 0, 0, 0 , 0 }
									};
	public static boolean[] visited = new boolean[vertices.length];
	public static Graph graph = new Graph(vertices);
	
	public static void main(String[] args) {
		System.out.println(DFS(0));
	}

	private static List<Integer> DFS(int vertex) {
		List<Integer> list = new LinkedList<Integer>();
		if (vertex > vertices.length) {
			return list;
		}
		if (!visited[vertex]) {
			visited[vertex] = true;
			list.add(vertex);
		}
		
	}

	
	

}
