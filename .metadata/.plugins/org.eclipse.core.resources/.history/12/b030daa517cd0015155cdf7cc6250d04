package pacman;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.PrintStream;
import java.io.UnsupportedEncodingException;
import java.util.Scanner;

public class Level {
	
	private int rows, columns;
	
	private MapSpot[][] level;
	
	public Level(String fileOfLevel) {
		readLevelFromFile(fileOfLevel);
	}

	private void readLevelFromFile(String fileOfLevel) {
		Scanner fileInput = null;
		try {
			// Create scanner with the Cyrillic encoding
			fileInput = new Scanner(
			new File(fileOfLevel), "windows-1251");
			fileInput.nextLine();
			String line = fileInput.nextLine();
			while (fileInput.hasNextLine()) {
				line = fileInput.nextLine();
			}
		} catch (FileNotFoundException fnfe) {
				System.err.println(fnfe.getMessage());
		} finally {
			if (null != fileInput) {
				fileInput.close();
			}
		}
		
	}

//	private void continueLevel() {
//
//		short i;
//		int dy = -1;
//		int random;
//
//		for (i = 0; i < nrofghosts; i++) {
//
//			ghostx[i] = 7 * blocksize; // ghosts starting point
//			ghosty[i] = 9 * blocksize;
//			ghostdx[i] = 0;
//			ghostdy[i] = dy;
//			dy = -dy;
//			// random for speed of ghost
//			random = (int) (Math.random() * (currentspeed + 1));
//
//			if (random > currentspeed) {
//				random = currentspeed;
//			}
//
//			ghostspeed[i] = validspeeds[random];
//		}
//
//		pacmanx = 7 * blocksize; // pacman starting point
//		pacmany = 14 * blocksize;
//		pacmandx = 0;
//		pacmandy = 0;
//		reqdx = 0;
//		reqdy = 0;
//		viewdx = -1;
//		viewdy = 0;
//		dying = false;
//		counterForDiagonalX = 0;
//		counterForDiagonalY = 0;
//	}
//	
//	private void initLevel() {
//
//		int i;
//		for (i = 0; i < nrofblocks * nrofblocks; i++) {
//			screendata[i] = leveldata[i];
//		}
//
//		continueLevel();
//	}
//
//	private void checkMaze() {
//
//		short i = 0;
//		boolean finished = true;
//
//		while (i < nrofblocks * nrofblocks && finished) {
//
//			if ((screendata[i] & 48) != 0) {
//				finished = false;
//			}
//
//			i++;
//		}
//
//		if (finished) {
//
//			score = 0;
//			remainingTimeForKill = 1;
//			initLevel();
//		}
//	}
	
}
