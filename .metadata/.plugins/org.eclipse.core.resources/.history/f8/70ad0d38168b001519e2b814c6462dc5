package all;

public class Problem5Company {
	private String companyName;
    private String owner;
    private String bulstat;
    private List<Problem5Employee> employees;
    private MultiDictionary<double, Apartment> apartmentCatalog;
    private MultiDictionary<double, House> houseCatalog;
    private MultiDictionary<double, Estate> shopCatalog;

    public Company(string name, string owner, string bulstat)
    {
        this.companyName = name;
        this.owner = owner;
        this.bulstat = bulstat;
        this.apartmentCatalog = new MultiDictionary<double, Apartment>(false);
        this.houseCatalog = new MultiDictionary<double, House>(true);
        this.shopCatalog = new MultiDictionary<double, Estate>(true);
        this.employees = new List<Employee>();
    }

    public string Bulstat
    {
        get
        {
            return this.bulstat;
        }
    }

    public string Owner
    {
        get
        {
            return this.owner;
        }
    }

    public string CompanyName
    {
        get
        {
            return this.companyName;
        }
    }

    public void AddHouse(House hs)
    {
        if (houseCatalog.ContainsKey(
           CalculatingHashCode(hs.Area, hs.PricePerSquareMeter)) == false)
        {
            houseCatalog.Add(CalculatingHashCode(
                hs.Area, hs.PricePerSquareMeter), hs);
        }
    }

    public void AddApartment(Apartment apartment)
    {
        if (apartmentCatalog.ContainsKey(CalculatingHashCode(apartment.Area, 
            apartment.PricePerSquareMeter)) == false)
        {
            apartmentCatalog.Add(CalculatingHashCode(
                apartment.Area, apartment.PricePerSquareMeter), 
                apartment);
        }
    }

    public void AddShop(Estate shop)
    {
        if (shopCatalog.ContainsKey(
            CalculatingHashCode(shop.Area, shop.PricePerSquareMeter)) == false)
        {
            shopCatalog.Add(CalculatingHashCode(
                shop.Area, shop.PricePerSquareMeter), shop);
        }
    }

    private double CalculatingHashCode(double area, double pricePerSquare)
    {
        return 31 * area * pricePerSquare * 13.45 * 24.13;
    }

    public void ApartmentCatalogPrint()
    {
        foreach (var apartment in apartmentCatalog)
        {
            Console.WriteLine(apartment.Value.ToString());
        }
    }

    public void HouseCatalogPring()
    {
        foreach (var house in houseCatalog)
        {
            Console.WriteLine(house.Value.ToString().Trim('{', '}'));
        }
    }

    public void ShopCatalog()
    {
        foreach (var shop in shopCatalog)
        {
            Console.WriteLine(shop.Value.ToString().Trim('{', '}'));
        }
    }

    public void AddEmployee(Employee emp)
    {
        if (employees.Contains(emp) == false)
        {
            employees.Add(emp);
        }
    }

    public void EmployeesPrint()
    {
        foreach (var employee in employees)
        {
            Console.WriteLine(employee.ToString());
        }
    }

}
