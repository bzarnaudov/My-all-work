package all;

import java.io.IOException;
import java.nio.file.*;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import java.util.Stack;

public class BfsForAllDirectoriesOnHardDisk {

	public static void main(String[] args) {
		Path path,real;
		String hardDiskLetter;
		Scanner input = new Scanner(System.in);
		System.out.print("Please enter path for directory , which you want to see details : ");
		while (true) {
			hardDiskLetter = input.nextLine();
			path = Paths.get(hardDiskLetter + ":\\");
			try {
				real = path.toRealPath();
			} catch (IOException e) {
				System.out.println("This is not vallid path");
				continue;
//				e.printStackTrace();
//				System.exit(0);
			}

		}
		
		

//		Queue<String> queue = new LinkedList<String>();
//		queue.add(hardDiskLetter);
//		
//		while (queue.size() > 0) {
//			Item currentItem = queue.poll();
//			if (currentItem.value < m) {
//				queue.add(new Item(currentItem.value * 2, currentItem));
//				queue.add(new Item(currentItem.value + 2, currentItem));
//				queue.add(new Item(currentItem.value + 1, currentItem));
//			}
//			if (currentItem.value == m) {
//				printSequenceNtoM(currentItem);
//				break;
//			}
//			if (queue.size() == 0) {
//				System.out.println("No solution.");
//			}
//		}
//		input.close();
//	}
//
//	private static void printSequenceNtoM(Item currentItem) {
//		Stack<Integer> stack = new Stack<Integer>();
//		while (currentItem != null) {
//			stack.push(currentItem.value);
//			currentItem = currentItem.previousItem;
//		}
//		
//		while (stack.size() > 0) {
//			System.out.print(stack.pop());
//			if (!stack.isEmpty()) {
//				System.out.print(" -> ");
//			}
//		}
	}
}
